package kantan.csv

trait GeneratedRowDecoders {
  private def decode[A](ss: Seq[String], i: Int, da: CellDecoder[A]): DecodeResult[A] =
    if(ss.isDefinedAt(i)) da.decode(ss(i))
    else                  DecodeResult.outOfBounds(i)

  [#def decoder1[[#A1#], R](f: ([#A1#]) ⇒ R)([#i1: Int#])(implicit [#a1: CellDecoder[A1]#]): RowDecoder[R] =
    RowDecoder(ss ⇒ for {
      [#f1 ← decode(ss, i1, a1)#
      ]
    } yield f([#f1#]))#
  ]

  [#def ordered1[[#A1#], R](f: ([#A1#]) ⇒ R)(implicit [#a1: CellDecoder[A1]#]): RowDecoder[R] =
    RowDecoder(ss ⇒ for {
      [#f1 ← decode(ss, 0, a1)#
      ]
    } yield f([#f1#]))#
  ]
}
