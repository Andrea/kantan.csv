package kantan.csv.laws.discipline

import kantan.codecs.laws.discipline.GenCodecValue
import org.scalacheck.Arbitrary

trait ArbitraryArities extends kantan.codecs.laws.discipline.ArbitraryInstances {
  implicit def arbTuple1[A](implicit a1: Arbitrary[A]): Arbitrary[Tuple1[A]] =
      Arbitrary(a1.arbitrary.map(Tuple1.apply))

  [#implicit def tuple1CodecValue[[#A1: Arbitrary#]](implicit [#c1: GenCodecValue[String, A1]#]): GenCodecValue[Seq[String], Tuple1[[#A1#]]] = GenCodecValue[Seq[String], Tuple1[[#A1#]]] { is ⇒
    Seq([#c1.encode(is._1)#])
  }{ ss ⇒ ss.length != 1 [#|| c1.isIllegal(ss(0))# ] }#

    ]
}